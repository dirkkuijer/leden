{% extends 'layout.html.twig' %}
  {% block stylesheet %}
            {% stylesheets filter='cssrewrite' output="css/main.css"
                "%kernel.root_dir%/Resources/assets/css/foundation.css"
                "%kernel.root_dir%/Resources/assets/css/main.css"
                "%kernel.root_dir%/Resources/assets/css/all.css"
            %}
            <link rel="stylesheet" href="{{ asset_url }}" />
            {% endstylesheets %}  
    {% endblock %}


{% block body %}
    <h3>Lid aanmaken</h3>

    <div class="grid-x grid-padding-x">
        <div class="cell medium-3">
            <a href="{{ path('member_index') }}">Terug naar overzicht</a>
        </div>
            <div class="cell medium-9"></div>   
    </div>
    
    {{ form_start(form) }}
{# first field: firstName #}
    <div class="grid-x grid-padding-x">
        <div class="cell medium-4"></div>
            <div class="cell medium-2">
                {{ form_label(form.firstName) }}
            </div>
            <div class="cell medium-3">
                {{ form_widget(form.firstName) }}
            </div>
        <div class="cell medium-3"></div>
    </div>
{# second field: lastName #}
    <div class="grid-x grid-padding-x">
        <div class="cell medium-4"></div>
            <div class="cell medium-2">
                {{ form_label(form.lastName) }}
            </div>
            <div class="cell medium-3">
                {{ form_widget(form.lastName) }}
            </div>
        <div class="cell medium-3"></div>
    </div>
{# third field: email #}
    <div class="grid-x grid-padding-x">
        <div class="cell medium-4"></div>
            <div class="cell medium-2">
                {{ form_label(form.email) }}
            </div>
            <div class="cell medium-3">
                {{ form_widget(form.email) }}
            </div>
        <div class="cell medium-3"></div>
    </div>
{# fourth field: street #}
    <div class="grid-x grid-padding-x">
        <div class="cell medium-4"></div>
            <div class="cell medium-2">
                {{ form_label(form.street) }}
            </div>
            <div class="cell medium-3">
                {{ form_widget(form.street) }}
            </div>
        <div class="cell medium-3"></div>
    </div>
{# fith field: houseNumber #}
    <div class="grid-x grid-padding-x">
        <div class="cell medium-4"></div>
            <div class="cell medium-2">
                {{ form_label(form.houseNumber) }}
            </div>
            <div class="cell medium-3">
                {{ form_widget(form.houseNumber) }}
            </div>
        <div class="cell medium-3"></div>
    </div>
{# sixth field: houseNumberAddition #}
    <div class="grid-x grid-padding-x">
        <div class="cell medium-4"></div>
            <div class="cell medium-2">
                {{ form_label(form.houseNumberAddition) }}
            </div>
            <div class="cell medium-3">
                {{ form_widget(form.houseNumberAddition) }}
            </div>
        <div class="cell medium-3"></div>
    </div>
{# seventh field: zipCode #}
    <div class="grid-x grid-padding-x">
        <div class="cell medium-4"></div>
            <div class="cell medium-2">
                {{ form_label(form.zipCode) }}
            </div>
            <div class="cell medium-3">
                {{ form_widget(form.zipCode) }}
            </div>
        <div class="cell medium-3"></div>
    </div>
{# eigth field: city #}
    <div class="grid-x grid-padding-x">
        <div class="cell medium-4"></div>
            <div class="cell medium-2">
                {{ form_label(form.city) }}
            </div>
            <div class="cell medium-3">
                {{ form_widget(form.city) }}
            </div>
        <div class="cell medium-3"></div>
    </div>
{# ninth field: telephone #}
    <div class="grid-x grid-padding-x">
        <div class="cell medium-4"></div>
            <div class="cell medium-2">
                {{ form_label(form.telephone) }}
            </div>
            <div class="cell medium-3">
                {{ form_errors(form.telephone) }}
                {{ form_widget(form.telephone) }}
            </div>
        <div class="cell medium-3"></div>
    </div>
{# tenth field: dateOfBirth #}
    <div class="grid-x grid-padding-x">
        <div class="cell medium-4"></div>
            <div class="cell medium-2">
                {{ form_label(form.dateOfBirth) }}
            </div>
                <div class="cell medium-3">
                    {{ form_widget(form.dateOfBirth) }}
                </div>
                <div class="cell medium-3"></div>
            </div>

{# Second form with the dates and reasons #}
        {% import _self as forms %}
        {% macro memberTypeRow(widget) %}
        
            {% if widget.vars.prototype is defined %}
                {% set form = widget.vars.prototype %}
                {% set name = widget.vars.prototype.vars.name %}
            {% else %}
                {% set form = widget %}
                {% set name = widget.vars.full_name %}
            {% endif %} 

<div data-content="{{ name }}"  class="panel panel-default">
    <div class="panel-body">
        <div class="collection-item">
                
            <div class="grid-x grid-padding-x">
                <div class="cell medium-4"></div>
                <div class="cell medium-2">
                    <h5>Datums:</h5>
                </div>
                <div class="cell medium-8"></div>
            </div>

{# first field: fromDate #}
            <div class="grid-x grid-padding-x">
                <div class="cell medium-4"></div>
                <div class="cell medium-2">
                    {{ form_label(form.fromDate) }}
                </div>
                <div class="cell medium-3">
                    {{ form_widget(form.fromDate) }}
                </div>
                <div class="cell medium-3"></div>
            </div>

{# second field: tillDate #}

 <div class="grid-x grid-padding-x">
                <div class="cell medium-4"></div>
                <div class="cell medium-2">
                    {{ form_label(form.tillDate) }}
                </div>
                <div class="cell medium-3">
                    {{ form_widget(form.tillDate) }}
                </div>
                <div class="cell medium-3"></div>
            </div>

{# third field: reason #}
            <div class="grid-x grid-padding-x">
                <div class="cell medium-4"></div>
                <div class="cell medium-2">   
                    {{ form_label(form.reason) }}
                </div>
                <div class="cell medium-3">
                    {{ form_widget(form.reason) }}
                </div>
                <div class="cell medium-3"></div>
            </div>           
{#  title third form#}
            <div class="grid-x grid-padding-x">
                <div class="cell medium-4"></div>
                <div class="cell medium-2">
                    <h5>Soort lid:</h5>
                </div>
                <div class="cell medium-8"></div>
            </div>
{# fourth field: memberType #}
            <div class="grid-x grid-padding-x">
                <div class="cell medium-2">
                    {{ form_label(form.memberType) }}
                </div>
                <div class="cell medium-3">   
                    {{ form_widget(form.memberType) }}
                </div>
                <div class="cell medium-3"></div>
            </div>  

            <div class="grid-x grid-padding-x">
                <div class="cell medium-6">    
                    <a href="javascript:void(0);" class="button tiny collection-remove"
                    data-collection-item-class="collection-item">- Eigenschappen</a>
                </div>
                <div class="cell medium-6"></div>
           </div>
      
{% endmacro %}
        <div class="grid-x grid-padding-x">
            <div class="cell medium-6"></div>    
            <div class="cell medium-4">    
                <div id="memberTypes" data-prototype="
                    {{ forms.memberTypeRow(form.type.vars.prototype)|e('html_attr') }}">
                    {% for type in form.type %}
                        {{ form_row(form.type) }}
                    {% endfor %}
                </div>
            <div class="cell medium-6">    
                <a href="#" class="button tiny" id="collection-add" data-collection="memberTypes" data-index="{{ form.type|length }}">
                    + Eigenschappen</a>
            </div>
                <input class="button primary" type="submit" value="Aanmaken" />
            <div>
        </div>

        </div>      
    </div>       
</div>
{# end second form #}

    {# submit button all forms #}

    {{ form_end(form) }}

    <script>
 
        jQuery(document).ready(function() {
            $(document).on('click', '#collection-add', function () {

                console.log('Item toegevoegd.');

                var $collectionContainer = $('#' + $(this).data('collection'));
               // hier gebruike we de tweede regel niet.
                var insertOrder = $(this).data('insert-order') || 'last';
                var prototype = $collectionContainer.attr('data-prototype');
                var prototypeName = $collectionContainer.attr('data-prototype-name') || '__name__';


                var lastCollectionItem = $collectionContainer.children().last();
                var lastCollectionItemInputName = $('input', lastCollectionItem).first().attr('name');

                var newIndex = 0;

                if (!$collectionContainer.attr('data-index')) {
                    if ($collectionContainer.children().length > 0) {
                        var prototypeInputName = $('input', $(prototype)).first().attr('name');
                        var splittedStr = prototypeInputName.split(prototypeName);
                        var leftSideStr = splittedStr[0];
                        var rightSideStr = splittedStr[1];

                        newIndex = parseInt(lastCollectionItemInputName.replace(leftSideStr, '').replace(rightSideStr, '')) + 1;
                    }
                } else {
                    /* NEWERER method to determine next input index */
                    $collectionContainer.attr('data-index', function(idx, val) {
                        newIndex = parseInt(val) + 1
                        return newIndex
                    });
                }

                var prototypeRegExp = new RegExp(prototypeName, "g");
                var item = prototype.replace(prototypeRegExp, newIndex);

                if (insertOrder == 'last' || (typeof insertOrder === typeof undefined && insertOrder === false)) {
                    $collectionContainer.append(item);
                } else {
                    $collectionContainer.prepend(item);
                }

                return false;

            });

            $(document).on('click', '.collection-remove', function () {
                console.log('remove');
                var $collectionItem = $(this).closest('.' + $(this).data('collection-item-class'));
                $collectionItem.remove();

                return false;
            });
        });

    </script>

 {% endblock %}